<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">

<!-- This is the base XSD for the configuration file. It may be modified at run time if optional
     components are enabled that require additional schema definitions. This ensures the XSD does
     not become unnecessarily cluttered - which can drastically reduce start up times -->

<!-- general device types -->
<!-- use xs:all to define required types without ordering - but it cannot be inherited, so just repeat
     the device name, username and userdescription for each device type to ensure completeness without
     imposing ordering (via xs:sequence) or relaxing repetition (via xs:choice) -->

<!-- device names are used extensively within Javascript, xml and html. Restrict them to alphanumerics only
     and '-'or '_' as a delimiter. -->
<xs:simpleType name="deviceNameType">
  <xs:restriction base="xs:string">
    <xs:pattern value="[(0-9a-zA-Z)|(-_)]+"/>
  </xs:restriction>
</xs:simpleType>

<!-- multiple devices for input or output -->
<xs:complexType name="deviceInputsOutputsType">
  <xs:choice>
    <xs:element name="device" type="deviceNameType" minOccurs="1" maxOccurs="unbounded"/>
  </xs:choice>
</xs:complexType>

<!-- single device for input or output -->
<xs:complexType name="deviceInputOutputType">
  <xs:choice>
    <xs:element name="device" type="deviceNameType"  minOccurs="1" maxOccurs="1"/>
  </xs:choice>
</xs:complexType>

<xs:simpleType name="validStringType">
  <xs:restriction base="xs:string">
    <xs:whiteSpace value="collapse"/>
    <xs:minLength  value="1"/>
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="userNameType">
  <xs:restriction base="validStringType"/>
</xs:simpleType>

<xs:simpleType name="userDescriptionType">
  <xs:restriction base="validStringType"/>
</xs:simpleType>

<xs:simpleType name="switchNumberType">
  <xs:restriction base="xs:integer">
    <xs:enumeration value="0"/>
    <xs:enumeration value="1"/>
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="pwmNumberType">
  <xs:restriction base="xs:decimal">
    <xs:minInclusive value="0.0"/>
    <xs:maxInclusive value="1.0"/>
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="tempNumberType">
  <xs:restriction base="xs:decimal">
    <xs:minInclusive value="-100.0"/>
    <xs:maxInclusive value="200.0"/>
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="pHNumberType">
  <xs:restriction base="xs:decimal">
    <xs:minInclusive value="0.0"/>
    <xs:maxInclusive value="14.0"/>
  </xs:restriction>
</xs:simpleType>

<xs:simpleType name="hexType">
  <xs:restriction base="xs:string">
    <xs:pattern value="0x[0-9a-fA-F]+"/>
  </xs:restriction>
</xs:simpleType>
<xs:simpleType name="durationType">
  <xs:restriction base="xs:string">
    <!-- this is hh:mm:ss - need to expand to d:hh:mm:ss or d:hh:mm.ss -->
    <xs:pattern value="^(?:(?:([01]?\d|2[0-3]):)?([0-5]?\d):)?([0-5]?\d)$"/>
  </xs:restriction>
</xs:simpleType>
<!--TORC_XSD_TYPES-->
<!-- input definitions -->
<xs:complexType name="networkSwitchType">
  <xs:all>
    <xs:element name="name"     type="deviceNameType"/>
    <xs:element name="username" type="userNameType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="userdescription" type="userDescriptionType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="default"  type="switchNumberType"/>
  </xs:all>
</xs:complexType>

<xs:complexType name="networkButtonType">
  <xs:all>
    <xs:element name="name"     type="deviceNameType"/>
    <xs:element name="username" type="userNameType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="userdescription" type="userDescriptionType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="default"  type="switchNumberType"/>
  </xs:all>
</xs:complexType>

<xs:complexType name="networkPWMType">
  <xs:all>
    <xs:element name="name"     type="deviceNameType"/>
    <xs:element name="username" type="userNameType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="userdescription" type="userDescriptionType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="default"  type="pwmNumberType"/>
  </xs:all>
</xs:complexType>

<xs:complexType name="networkTempType">
  <xs:all>
    <xs:element name="name"     type="deviceNameType"/>
    <xs:element name="username" type="userNameType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="userdescription" type="userDescriptionType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="default"  type="tempNumberType"/>
  </xs:all>
</xs:complexType>

<xs:complexType name="networkpHType">
  <xs:all>
    <xs:element name="name"     type="deviceNameType"/>
    <xs:element name="username" type="userNameType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="userdescription" type="userDescriptionType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="default"  type="pHNumberType"/>
  </xs:all>
</xs:complexType>

<xs:complexType name="networkType">
  <xs:choice minOccurs="1" maxOccurs="unbounded">
    <xs:element name="switch"      type="networkSwitchType"/>
    <xs:element name="pwm"         type="networkPWMType"/>
    <xs:element name="temperature" type="networkTempType"/>
    <xs:element name="ph"          type="networkpHType"/>
    <xs:element name="button"      type="networkButtonType"/>
  </xs:choice>
</xs:complexType>
<!--TORC_XSD_INPUTTYPES-->
<xs:complexType name="inputsType">
  <xs:all>
    <!-- 0 or 1 instances of each of these types in any order-->
    <xs:element minOccurs="0" maxOccurs="1" name="network" type="networkType"/>
<!--TORC_XSD_INPUTS-->
  </xs:all>
</xs:complexType>

<!-- control definition -->
<xs:complexType name="simpleLogicType">
  <xs:all>
    <xs:element name="name"     type="deviceNameType"/>
    <xs:element name="username" type="userNameType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="userdescription" type="userDescriptionType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="inputs"   type="deviceInputsOutputsType"/>
    <xs:element name="outputs"  type="deviceInputsOutputsType"/>
  </xs:all>
</xs:complexType>

<xs:complexType name="complexLogicType">
  <xs:all>
    <xs:element name="name"     type="deviceNameType"/>
    <xs:element name="username" type="userNameType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="userdescription" type="userDescriptionType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="inputs"   type="deviceInputsOutputsType"/>
    <xs:element name="outputs"  type="deviceInputsOutputsType"/>
    <xs:element name="value"    type="xs:decimal"/>
  </xs:all>
</xs:complexType>

<xs:complexType name="logicType">
  <xs:choice minOccurs="1" maxOccurs="unbounded">
    <xs:element name="none"               type="simpleLogicType"/>
    <xs:element name="passthrough"        type="simpleLogicType"/>
    <xs:element name="equal"              type="complexLogicType"/>
    <xs:element name="lessthan"           type="complexLogicType"/>
    <xs:element name="greaterthan"        type="complexLogicType"/>
    <xs:element name="lessthanorequal"    type="complexLogicType"/>
    <xs:element name="greaterthanorequal" type="complexLogicType"/>
    <xs:element name="any"                type="simpleLogicType"/>
    <xs:element name="all"                type="simpleLogicType"/>
    <xs:element name="average"            type="simpleLogicType"/>
    <xs:element name="toggle"             type="simpleLogicType"/>
    <xs:element name="invert"             type="simpleLogicType"/>
  </xs:choice>
</xs:complexType>

<xs:complexType name="timerType">
  <xs:all>
    <xs:element name="name"     type="deviceNameType"/>
    <xs:element name="username" type="userNameType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="userdescription" type="userDescriptionType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="outputs"  type="deviceInputsOutputsType"/>
    <xs:element name="start"    type="validStringType"/> <!-- TODO can we do better than string? -->
    <xs:element name="duration" type="validStringType"/> <!-- TODO can we do better than string? -->
  </xs:all>
</xs:complexType>

<xs:complexType name="timersType">
  <xs:choice minOccurs="1" maxOccurs="unbounded">
    <xs:element name="custom"   type="timerType"/>
    <xs:element name="minutely" type="timerType"/>
    <xs:element name="hourly"   type="timerType"/>
    <xs:element name="daily"    type="timerType"/>
    <xs:element name="weekly"   type="timerType"/>
  </xs:choice>
</xs:complexType>

<xs:complexType name="transitionType">
  <xs:all>
    <xs:element name="name"     type="deviceNameType"/>
    <xs:element name="username" type="userNameType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="userdescription" type="userDescriptionType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="inputs"   type="deviceInputOutputType"/>
    <xs:element name="outputs"  type="deviceInputsOutputsType"/>
    <xs:element name="duration" type="validStringType"/> <!-- TODO can we do better than string? -->
  </xs:all>
</xs:complexType>

<xs:complexType name="transitionsType">
  <xs:choice minOccurs="1" maxOccurs="unbounded">
    <xs:element name="linear"       type="transitionType"/>
    <xs:element name="inquad"       type="transitionType"/>
    <xs:element name="outquad"      type="transitionType"/>
    <xs:element name="inoutquad"    type="transitionType"/>
    <xs:element name="outInquad"    type="transitionType"/>
    <xs:element name="incubic"      type="transitionType"/>
    <xs:element name="outcubic"     type="transitionType"/>
    <xs:element name="inoutcubic"   type="transitionType"/>
    <xs:element name="outIncubic"   type="transitionType"/>
    <xs:element name="inquart"      type="transitionType"/>
    <xs:element name="outquart"     type="transitionType"/>
    <xs:element name="inoutquart"   type="transitionType"/>
    <xs:element name="outInquart"   type="transitionType"/>
    <xs:element name="inquint"      type="transitionType"/>
    <xs:element name="outquint"     type="transitionType"/>
    <xs:element name="inoutquint"   type="transitionType"/>
    <xs:element name="outinquint"   type="transitionType"/>
    <xs:element name="insine"       type="transitionType"/>
    <xs:element name="outsine"      type="transitionType"/>
    <xs:element name="inoutsine"    type="transitionType"/>
    <xs:element name="outinsine"    type="transitionType"/>
    <xs:element name="inexpo"       type="transitionType"/>
    <xs:element name="outexpo"      type="transitionType"/>
    <xs:element name="inoutexpo"    type="transitionType"/>
    <xs:element name="outinexpo"    type="transitionType"/>
    <xs:element name="incirc"       type="transitionType"/>
    <xs:element name="outcirc"      type="transitionType"/>
    <xs:element name="inoutcirc"    type="transitionType"/>
    <xs:element name="outincirc"    type="transitionType"/>
    <xs:element name="inelastic"    type="transitionType"/>
    <xs:element name="outelastic"   type="transitionType"/>
    <xs:element name="inoutelastic" type="transitionType"/>
    <xs:element name="outinelastic" type="transitionType"/>
    <xs:element name="inback"       type="transitionType"/>
    <xs:element name="outback"      type="transitionType"/>
    <xs:element name="inoutback"    type="transitionType"/>
    <xs:element name="outinback"    type="transitionType"/>
    <xs:element name="inbounce"     type="transitionType"/>
    <xs:element name="outbounce"    type="transitionType"/>
    <xs:element name="inoutbounce"  type="transitionType"/>
    <xs:element name="outinbounce"  type="transitionType"/>
    <xs:element name="linearled"    type="transitionType"/>
  </xs:choice>
</xs:complexType>
<!--TORC_XSD_CONTROLTYPES-->
<xs:complexType name="controlType">
  <xs:all>
    <!-- 0 or 1 instances of logic, timer and transition -->
    <xs:element minOccurs="0" maxOccurs="1" name="logic"      type="logicType"/>
    <xs:element minOccurs="0" maxOccurs="1" name="timer"      type="timersType"/>
    <xs:element minOccurs="0" maxOccurs="1" name="transition" type="transitionsType"/>
<!--TORC_XSD_CONTROLS-->
  </xs:all>
</xs:complexType>

<!-- outputs definitions -->
<!--TORC_XSD_OUTPUTTYPES-->
<xs:complexType name="outputsType">
  <xs:all>
    <!-- 0 or 1 instances of these types -->
    <xs:element minOccurs="0" maxOccurs="1" name="network" type="networkType"/>
<!--TORC_XSD_OUTPUTS-->
  </xs:all>
</xs:complexType>

<!-- notifier definitions -->
<xs:complexType name="logType">
  <xs:all>
    <xs:element name="name"            type="deviceNameType"/>
    <xs:element name="username"        type="userNameType"        minOccurs="0" maxOccurs="1"/>
    <xs:element name="userdescription" type="userDescriptionType" minOccurs="0" maxOccurs="1"/>
  </xs:all>
</xs:complexType>
<xs:complexType name="pushbulletType">
  <xs:all>
    <xs:element name="name"            type="deviceNameType"/>
    <xs:element name="username"        type="userNameType"        minOccurs="0" maxOccurs="1"/>
    <xs:element name="userdescription" type="userDescriptionType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="accesstoken"     type="validStringType"/>
  </xs:all>
</xs:complexType>
<!--TORC_XSD_NOTIFIERTYPES-->
<xs:complexType name="notifierType">
  <xs:choice minOccurs="1" maxOccurs="unbounded">
    <!-- 0 or more instances - though generally only one of each will be needed -->
    <xs:element minOccurs="0" maxOccurs="unbounded" name="log"        type="logType"/>
    <xs:element minOccurs="0" maxOccurs="unbounded" name="pushbullet" type="pushbulletType"/>
<!--TORC_XSD_NOTIFIERS-->
  </xs:choice>
</xs:complexType>

<!-- notification definitions -->
<xs:complexType name="notificationMessageType">
  <xs:all>
    <xs:element name="title" type="validStringType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="body"  type="validStringType"/>
  </xs:all>
</xs:complexType>
<xs:complexType name="systemType">
  <xs:all>
    <xs:element name="name"            type="deviceNameType"/>
    <xs:element name="username"        type="userNameType"        minOccurs="0" maxOccurs="1"/>
    <xs:element name="userdescription" type="userDescriptionType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="outputs"         type="deviceInputsOutputsType"/>
    <xs:element name="message"         type="notificationMessageType"/>
    <xs:element name="inputs">
      <xs:complexType>
        <xs:choice>
          <xs:element name="event" minOccurs="1" maxOccurs="unbounded">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="start"/>
                <xs:enumeration value="stop"/>
                <xs:enumeration value="restarttorc"/>
                <xs:enumeration value="shutdown"/>
                <xs:enumeration value="suspend"/>
                <xs:enumeration value="hibernate"/>
                <xs:enumeration value="restart"/>
                <xs:enumeration value="shuttinddown"/>
                <xs:enumeration value="suspending"/>
                <xs:enumeration value="hibernating"/>
                <xs:enumeration value="restarting"/>
                <xs:enumeration value="wokeup"/>
                <xs:enumeration value="lowbattery"/>
                <xs:enumeration value="networkavailable"/>
                <xs:enumeration value="networkunavailalbe"/>
                <xs:enumeration value="networkchanged"/>
                <xs:enumeration value="networkhostnameschanged"/>
                <xs:enumeration value="servicediscovered"/>
                <xs:enumeration value="servicewentaway"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:element>
        </xs:choice>
      </xs:complexType>
    </xs:element>
  </xs:all>
</xs:complexType>
<xs:complexType name="triggerType">
  <xs:all>
    <xs:element name="name"            type="deviceNameType"/>
    <xs:element name="username"        type="userNameType"        minOccurs="0" maxOccurs="1"/>
    <xs:element name="userdescription" type="userDescriptionType" minOccurs="0" maxOccurs="1"/>
    <xs:element name="inputs"          type="deviceInputOutputType"/>
    <xs:element name="outputs"         type="deviceInputsOutputsType"/>
    <xs:element name="message"         type="notificationMessageType"/>
    <!-- trigger is normally activated with low to high transition. set triggerlow to activate high to low -->
    <xs:element name="triggerlow"      type="validStringType"     minOccurs="0" maxOccurs="1"/>
  </xs:all>
</xs:complexType>
<!--TORC_XSD_NOTIFICATIONTYPES-->
<xs:complexType name="notificationType">
  <xs:choice minOccurs="1" maxOccurs="unbounded">
    <xs:element minOccurs="0" maxOccurs="unbounded" name="system"  type="systemType"/>
    <xs:element minOccurs="0" maxOccurs="unbounded" name="trigger" type="triggerType"/>
<!--TORC_XSD_NOTIFIERS-->
  </xs:choice>
</xs:complexType>

<xs:complexType name="notifyType">
  <xs:all>
    <xs:element minOccurs="0" maxOccurs="1" name="notifiers"     type="notifierType"/>
    <xs:element minOccurs="0" maxOccurs="1" name="notifications" type="notificationType"/>
<!--TORC_XSD_NOTIFIERS-->
  </xs:all>
</xs:complexType>

<!-- Single root element 'torc' -->
<xs:complexType name="rootType">
  <xs:all>
    <!-- 0 or 1 instances of each of these types in any order-->
    <xs:element name="applicationname" minOccurs="0" maxOccurs="1" type="userNameType" />
    <xs:element name="inputs"          minOccurs="0" maxOccurs="1" type="inputsType"/>
    <xs:element name="control"         minOccurs="0" maxOccurs="1" type="controlType"/>
    <xs:element name="outputs"         minOccurs="0" maxOccurs="1" type="outputsType"/>
    <xs:element name="notify"          minOccurs="0" maxOccurs="1" type="notifyType">
      <!-- restrict notification outputs to notifiers -->
      <xs:key name="notifierNames">
        <xs:selector xpath='.//notifiers//name' />
        <xs:field xpath="." />
      </xs:key>
      <xs:keyref name="notifierRef" refer="notifierNames">
        <xs:selector xpath=".//notifications//outputs/device" />
        <xs:field xpath="." />
      </xs:keyref>
    </xs:element>
  </xs:all>
</xs:complexType>

<xs:element name="torc" type="rootType">
  <!-- enforce globally unique device names -->
  <xs:key name="uniqueDeviceName">
    <xs:selector xpath=".//name" />
    <xs:field xpath="." />
  </xs:key>
  <!-- and always refer to a valid device name -->
  <xs:keyref name="deviceRef" refer="uniqueDeviceName">
      <xs:selector xpath=".//device" />
      <xs:field xpath="." />
  </xs:keyref>
  <!-- list of inputs/control/outputs devices -->
  <xs:key name="realDeviceNames">
    <xs:selector xpath="./inputs//name|./outputs//name|./control//name" />
    <xs:field xpath="." />
  </xs:key>
  <!-- restrict notification device inputs to inputs/control/outputs devices-->
  <xs:keyref name="notificationInputRef" refer="realDeviceNames">
    <xs:selector xpath=".//notifications//inputs/device" />
    <xs:field xpath="." />
  </xs:keyref>
<!--TORC_XSD_UNIQUE-->
</xs:element>

</xs:schema>
